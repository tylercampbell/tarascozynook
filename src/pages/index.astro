---
import Layout from '../layouts/Layout.astro';
import Shelf from '../components/Shelf.astro';
import Offerings from '../data/offerings.json';

const colors = [
  {
    fg: 'text-purple-100/75',
    bg: 'bg-gradient-to-b from-purple-700 to-purple-900',
    saw: 'fill-purple-900'
  },
  {
    fg: 'text-emerald-900/75',
    bg: 'bg-gradient-to-b from-emerald-200 to-emerald-400',
    saw: 'fill-emerald-400'
  },
  {
    fg: 'text-amber-900/75',
    bg: 'bg-gradient-to-b from-amber-100 to-amber-200',
    saw: 'fill-amber-200'
  },
  {
    fg: 'text-blue-900/75',
    bg: 'bg-gradient-to-b from-blue-200 to-indigo-400',
    saw: 'fill-indigo-400'
  },
  {
    fg: 'text-purple-900/75',
    bg: 'bg-gradient-to-b from-purple-200 to-purple-400',
    saw: 'fill-purple-400'
  },
  {
    fg: 'text-red-900/75',
    bg: 'bg-gradient-to-b from-red-200 to-red-400',
    saw: 'fill-red-400'
  }
];
---

<Layout title="Tara's Cozy Nook">

  <header class={`p-12 relative ${colors[0].bg}`}>
    <h1 class={`text-center font-black text-4xl sm:text-6xl mt-6 mb-12 ${colors[0].fg}`}>Tara's Cozy Nook</h1>
    <nav class='mx-auto w-fit bg-orange-200 divide-yellow-900/25 rounded-2xl divide-y-4 sm:divide-y-0 divide-x-0 sm:divide-x-4 border-b-4 border-orange-900/50 shadow-xl shadow-orange-900/50 grid grid-cols-1 sm:grid-cols-4'>
      {Object.values(Offerings).map(category => (
        <div class='flex p-4 text-center place-items-center justify-center'>
          <a href={`#${category.name.replace(/\s+/g, '-').toLowerCase()}`} class='font-bold sm:text-lg text-amber-950 hover:underline'>{category.name}</a>
        </div>
      ))}
    </nav>
  </header>

  <main>

    <Shelf
      id="new-books"
      title="ðŸŽ‰ New Releases ðŸŽ‰"
      bgColorClass={colors[1].bg}
      fgColorClass={colors[1].fg}
      sawColorClass={colors[0].saw}
      books={Object.keys(Offerings).flatMap(categoryKey => {
        return Object.keys(Offerings[categoryKey].series).flatMap(seriesKey => {
          return Offerings[categoryKey].series[seriesKey].books.filter(book => book.new);
        });
      })}
    />
    
    {Object.keys(Offerings).map((categoryKey, index) => {
      const categoryData = Offerings[categoryKey];
      const bgFgColorIndex = (index + 2) % colors.length;
      const sawColorIndex = (index + 1) % colors.length;
      
      return (
        <Shelf
          id={categoryData.name.replace(/\s+/g, '-').toLowerCase()}
          title={categoryData.name}
          bgColorClass={colors[bgFgColorIndex].bg}
          fgColorClass={colors[bgFgColorIndex].fg}
          sawColorClass={colors[sawColorIndex].saw}
          books={Object.keys(categoryData.series).flatMap(seriesKey => {
            return categoryData.series[seriesKey].books;
          })}
        />
      );
    })}
    
  </main>
</Layout>
