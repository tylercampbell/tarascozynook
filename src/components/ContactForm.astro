---
---

<section id="contact" class="relative w-full">
  <p id="prompt" class="text-xl sm:text-2xl text-orange-900 font-bold text-center w-full py-4 tracking-wider">
    Send this card to <span class="text-orange-600">Tyler</span>?
  </p>
  <article id="postcard" class="w-full max-w-2xl mx-auto p-3 aspect-[1.58] stripes shadow-2xl shadow-purple-900">
    <form name="contact" method="POST" action="/#contact" data-netlify="true" class="relative h-full flex flex-col justify-between py-4 px-8 bg-white">
      <label for="message" class="text-sm sm:text-xl font-bold tracking-wider">Dear Tyler,</label>
      <textarea id="message" name="message" placeholder="u have a nice page" rows="3" data-min-rows="3" class="text-center font-bold text-sm sm:text-xl border-none bg-transparent placeholder-rose-600 focus:ring-0 tracking-wider resize-none autoExpand"></textarea>
      <div class="place-self-end -mr-5">
        <label for="sender" class="font-bold tracking-wider -mr-2 cursor-default text-sm sm:text-xl">From</label>
        <input id="sender" name="sender" placeholder="Your name" type="text" class="pt-px placeholder-rose-600 text-sm sm:text-xl min-w-[6ch] w-[12ch] max-w-sm font-bold tracking-wide border-none bg-transparent focus:ring-0">
      </div>
      <button id="submit" disabled type="submit" class="absolute bottom-[-84px] right-4 rotate-6 px-8 py-2 rounded-full cursor-pointer font-bold text-white sm:text-2xl disabled:cursor-not-allowed disabled:shadow-transparent disabled:opacity-50 bg-teal-500 border-transparent shadow-teal-700 shadow-xl border-4 enabled:hover:bg-gradient-to-br enabled:hover:from-teal-400 enabled:hover:to-teal-600 enabled:hover:border-teal-300 focus:bg-teal-600 focus:border-teal-300">OK!</button>
    </form>
    <aside id="success" class="hidden w-full h-full place-items-center bg-white relative">
      <p class="absolute rotate-12 right-0 top-0 sm:top-2 sm:right-2 text-7xl sm:text-8xl text-rose-300">â˜º</p>
      <div class="-rotate-6">
        <p class="text-xl sm:text-2xl text-blue-600 font-bold text-center w-full py-4 tracking-wider">Hey thanks!</p>
      </div>
    </aside>
  </article>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const formElement = document.querySelector('form[name="contact"]');
    const messageInput = document.getElementById('message');
    const senderInput = document.getElementById('sender');
    const submitButton = document.getElementById('submit');
    const promptElement = document.getElementById('prompt');
    const successElement = document.getElementById('success');

    function enableSubmitButton() {
      if (submitButton instanceof HTMLButtonElement && 
          messageInput instanceof HTMLTextAreaElement && 
          senderInput instanceof HTMLInputElement) {
        submitButton.disabled = (messageInput.value.trim() === '' || senderInput.value.trim() === '');
      }
    }

    function handleFormSubmission(e) {
      e.preventDefault();
      const form = e.target;
      const { action } = form;

      const headers = {
        'Accept': 'application/x-www-form-urlencoded;charset=UTF-8',
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'
      };

      const formData = new FormData(form);
      const formDataEntries = Array.from(formData.entries()).map(([key, value]) => [key, value.toString()]);
      const body = new URLSearchParams(formDataEntries).toString();

      fetch(action, { method: 'POST', headers, body })
        .then(response => {
          if (response.ok) {
            handleFormSubmissionSuccess();
          } else {
            throw new Error(`Network response was not ok. Response status: ${response.status}`);
          }
        })
        .catch(error => {
          console.error('Error:', error);
        });
    }

    function handleFormSubmissionSuccess() {
      promptElement.classList.add('opacity-0');
      formElement.classList.add('hidden');
      successElement.classList.replace('hidden', 'grid');
    }

    formElement.addEventListener('input', (e) => {
      if (e.target === messageInput || e.target === senderInput) {
        enableSubmitButton();
      }
    });

    formElement.addEventListener('submit', handleFormSubmission);
  });
</script>

<style>
  :root {
    --white: #ffffff;
    --red: #ca1f0e;
    --blue: #3251ac;
  }
  .stripes {
    background-image: linear-gradient(135deg, 
      var(--red) 11.11%, var(--white) 11.11%, var(--white) 25%,
      var(--blue) 25%, var(--blue) 36.11%, var(--white) 36.11%,
      var(--white) 50%, var(--red) 50%, var(--red) 61.11%,
      var(--white) 61.11%, var(--white) 75%, var(--blue) 75%,
      var(--blue) 86.11%, var(--white) 86.11%, var(--white) 100%
    );
    background-size: 127.28px 127.28px;
  }
</style>
