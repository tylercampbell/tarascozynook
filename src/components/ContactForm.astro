---
import BoxTop from './SvgBoxTop.astro';
---

<section id="contact" class="relative w-full bg-stone-800 pt-16">
  <BoxTop id="box" twClasses="absolute bottom-0" />
  
  <aside id="success" class="absolute w-full h-full flex items-center justify-center">
    <div class="-rotate-6 text-center">
      <p class="text-8xl text-rose-300 rotate-6">ðŸ¥³</p>
      <p class="text-6xl text-blue-400 font-bold">Hey thanks!</p>
    </div>
  </aside>

  <article id="paper" class="relative w-full max-w-2xl mx-auto bg-gradient-to-b from-purple-50 via-purple-50 to-indigo-200 transition origin-bottom">
    <form name="contact" method="POST" action="/#contact" data-netlify="true" class="relative h-full p-16 flex flex-col">
      <label for="message" class="text-sm sm:text-xl font-bold tracking-wider">Dear Tara,</label>
      <textarea id="message" name="message" placeholder="u make nice books" rows="3" data-min-rows="3" class="mt-4 mb-16 bg-indigo-200/50 focus:bg-white rounded-lg border-none font-bold text-sm sm:text-xl placeholder-indigo-400 tracking-wider"></textarea>
      <label for="sender" class="font-bold tracking-wider cursor-default text-sm sm:text-xl">From,</label>
      <input id="sender" name="sender" placeholder="Your name" type="text" class="mt-2 max-w-xs bg-indigo-200/50 focus:bg-white rounded-lg border-none text-sm sm:text-xl placeholder-indigo-400 font-bold tracking-wide">
      <button id="submit" disabled type="submit" class="mt-6 -rotate-6 self-end px-8 py-2 rounded-full cursor-pointer font-bold text-white sm:text-2xl disabled:cursor-not-allowed disabled:shadow-transparent disabled:opacity-50 bg-teal-500 border-transparent border-4 enabled:hover:bg-gradient-to-br enabled:hover:from-teal-400 enabled:hover:to-teal-600 enabled:hover:border-teal-300 focus:bg-teal-600 focus:border-teal-300">SEND</button>
    </form>
  </article>

</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const formElement = document.querySelector('form[name="contact"]');
    const messageInput = document.getElementById('message');
    const senderInput = document.getElementById('sender');
    const submitButton = document.getElementById('submit');

    function enableSubmitButton() {
      if (submitButton instanceof HTMLButtonElement && 
          messageInput instanceof HTMLTextAreaElement && 
          senderInput instanceof HTMLInputElement) {
        submitButton.disabled = (messageInput.value.trim() === '' || senderInput.value.trim() === '');
      }
    }

    function handleFormSubmission(e) {
      e.preventDefault();
      const form = e.target;
      const { action } = form;

      const headers = {
        'Accept': 'application/x-www-form-urlencoded;charset=UTF-8',
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'
      };

      const formData = new FormData(form);
      const formDataEntries = Array.from(formData.entries()).map(([key, value]) => [key, value.toString()]);
      const body = new URLSearchParams(formDataEntries).toString();

      fetch(action, { method: 'POST', headers, body })
        .then(response => {
          if (response.ok) {
            handleFormSubmissionSuccess();
          } else {
            throw new Error(`Network response was not ok. Response status: ${response.status}`);
          }
        })
        .catch(error => {
          console.error('Error:', error);
        });
    }

    function handleFormSubmissionSuccess() {
      const paperElement = document.getElementById('paper');
      paperElement.style.transform = 'scaleY(0)';
    }

    formElement.addEventListener('input', (e) => {
      if (e.target === messageInput || e.target === senderInput) {
        enableSubmitButton();
      }
    });

    formElement.addEventListener('submit', handleFormSubmission);
  });
</script>

<style>
  :root {
    --white: #ffffff;
    --red: #ca1f0e;
    --blue: #3251ac;
  }
  .stripes {
    background-image: linear-gradient(135deg, 
      var(--red) 11.11%, var(--white) 11.11%, var(--white) 25%,
      var(--blue) 25%, var(--blue) 36.11%, var(--white) 36.11%,
      var(--white) 50%, var(--red) 50%, var(--red) 61.11%,
      var(--white) 61.11%, var(--white) 75%, var(--blue) 75%,
      var(--blue) 86.11%, var(--white) 86.11%, var(--white) 100%
    );
    background-size: 127.28px 127.28px;
  }
</style>
